apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name | default "business-service" }}
  namespace: {{ .Values.namespace | default "business-service" }}
  labels:
    {{- include "business-service.labels" . | nindent 4 }}
    canary: {{ .Values.stable.labels.canary | quote }}
spec:
  replicas: {{ .Values.stable.replicaCount }}
  selector:
    matchLabels:
      {{- include "business-service.labels" . | nindent 6 }}
      canary: {{ .Values.stable.labels.canary | quote }}
  template:
    metadata:
      labels:
        {{- include "business-service.labels" . | nindent 8 }}
        canary: {{ .Values.stable.labels.canary | quote }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default "business-service" }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
      - name: business
        image: "{{ .Values.stable.image.repository }}:{{ .Values.stable.image.tag }}"
        ports:
        - containerPort: {{ .Values.service.targetPort }}
        env:
        {{- range .Values.env }}
        - name: {{ .name }}
          value: "{{ .value }}"
        {{- end }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.httpGet.path }}
            port: {{ .Values.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.httpGet.path }}
            port: {{ .Values.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}